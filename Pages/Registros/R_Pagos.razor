@page "/pago"
@page "/pago/{PagoId:int}"

@inject PagosBLL PagosBLL
@inject PersonasBLL PersonasBLL
@inject PrestamosBLL PrestamosBLL
@inject NotificationService notificationService

<EditForm Model="pago" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class="card">
        <div class="card-header">
            <h3>Registros de Pagos</h3>
        </div>
        <div class="card-body">
            <div class="container overflow-hidden">
                <div class="row gy-6">

                    @*PagoId*@
                    <label>pago ID</label>
                    <div class="form-r ow align-items-center">
                        <div class="col">
                            <div class="form-group">
                                <div class="input-group">
                                    <InputNumber @bind-Value="pago.PagoId" class="form-control" />
                                    <div class="input-group-append">
                                        <button class="btn btn-outline-primary" type="button" @onclick="Buscar"> <i
                                                class="oi oi-magnifying-glass" /> </button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>



                    @*Fecha*@
                    <div class="form-group">
                        <label>Fecha</label>
                        <InputDate @bind-Value="pago.Fecha" class="form-control" />
                        <ValidationMessage For="@(() => pago.Fecha)" />
                    </div>

                    @*Persona Id*@
                    <div class="form-group">
                        <label>PersonaId</label>
                        <InputSelect class="form-select" @bind-Value="pago.PersonaId">
                            @foreach (Personas pago in Informacion)
                            {
                                <option value="@pago.PersonaId">@pago.PersonaId (ID: @pago.PersonaId)</option>
                            }
                        </InputSelect>
                    </div>

                    @*Concepto*@
                    <div class="form-group">
                        <label>Concepto</label>
                        <InputText @bind-Value="pago.Concepto" class="form-control" />
                        <ValidationMessage For="@(() => pago.Concepto)" />
                    </div>

                    @*Monto*@
                    <div class="form-group">
                        <label>Monto</label>
                        <InputNumber @bind-Value="pago.Monto" class="form-control" />
                        <ValidationMessage For="@(() => pago.Monto)" />
                    </div>

                    @* PagosPagosDetalless *@

                    <div class="card-header">
                        <h4>Pagos PagosDetalles</h4>
                    </div>

                    <form>
                        <div class="row input-group d-flex align-items-end">

                            @* ID *@
                            <div class="form-group">
                                <label>ID</label>
                                <InputNumber class="form-control" @bind-Value="Id" />
                                <ValidationMessage For="@(() =>Id)" />
                            </div>

                            @* PagoId *@
                            <div class="form-group">
                                <label>Pago Id</label>
                                <InputNumber class="form-control" @bind-Value="PagoId" />
                                <ValidationMessage For="@(() => PagoId)" />
                            </div>

                            @* PrestamoId *@
                            <div class="form-group">
                                <label>Prestamo Id</label>
                                <InputNumber class="form-control" @bind-Value="PrestamoId" />
                                <ValidationMessage For="@(() => PrestamoId)" />
                            </div>

                            @* ValorPagado *@
                            <div class="form-group">
                                <label>Valor Pagado</label>
                                <InputNumber class="form-control" @bind-Value="ValorPagado" />
                                <ValidationMessage For="@(() => ValorPagado)" />
                            </div>


                            <button type="button" class="btn btn-success col" @onclick="AgregarPagosDetalles">
                                Agregar PagosDetalles
                            </button>

                        </div>
                        <br>
                        <table class="table">
                            <thead>
                                <tr>
                                    <th>Id</th>
                                    <th>Pago Id</th>
                                    <th>Prestamo Id</th>
                                    <th>Valor Pagado</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in pago.PagosDetalles)
                                {
                                    <tr>
                                        <td>@item.Id</td>
                                        <td>@item.PagoId</td>
                                        <td>@item.PrestamoId</td>
                                        <td>@item.ValorPagado</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </form>



                    <div class="card-footer d-flex justify-content-center">
                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-primary" @onclick="Nuevo"> <i class="oi oi-file" />
                                Nuevo</button>
                            <button type="submit" class="btn btn-success"> <i class="oi oi-document" /> Guardar</button>
                            <button type="button" class="btn btn-danger" @onclick="Eliminar"><i class="oi oi-trash" />
                                Eliminar</button>
                        </div>
                    </div>
                </div>

            </div>

        </div>

    </div>
</EditForm>



@code
{

    [Parameter]
    public int PagoId { get; set; }
    public Pagos pago { get; set; } = new Pagos();
    public String mensaje { get; set; } = "";
    public List<Personas> Informacion { get; set; } = new List<Personas>();
    public int Id { get; set; }
    public List<Pagos> PagosDetalless { get; set; } = new List<Pagos>();
    public int PrestamoId { get; set; }
    public int ValorPagado { get; set; }

    protected override void OnInitialized()
    {
        Informacion = PersonasBLL.GetList(o => true);
        if (PagoId > 0)
        {

            this.pago.PagoId = PagoId;
            this.Buscar();
        }
    }

    public void Nuevo()
    {
        mensaje = "";
        pago = new Pagos();
    }

    bool Validar()
    {
        return pago.Concepto.Contains(".");
    }

    public void Guardar()
    {

        bool guardo = PagosBLL.Guardar(pago);

        if (guardo)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Guardado correctamente"
            });

            Nuevo();
        }
    }
    private void Buscar()
    {
        if (pago.PagoId > 0)
        {
            var encontrado = PagosBLL.Buscar(pago.PagoId);

            if (encontrado != null)
                this.pago = encontrado;
        }
    }

    public void Eliminar()
    {
        bool elimino;

        elimino = PagosBLL.Eliminar(pago);

        if (elimino)
        {
            ShowNotification(
            new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Summary = "Eliminado correctamente"
            });
            Nuevo();

        }
    }

    private void AgregarPagosDetalles()
    {
        this.pago.PagosDetalles.Add(new PagosDetalles(Id, PagoId, PrestamoId, ValorPagado));
        Id = 0;
        PagoId = 0;
        PrestamoId = 0;
        ValorPagado = 0;
    }


    void ShowNotification(NotificationMessage message)
    {
        notificationService.Notify(message);

    }
}